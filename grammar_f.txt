Program -> Declarationlist eof .

Declarationlist -> Declaration Declarationlist.
Declarationlist -> .

Declaration -> Typespecifier _add id_ id AA.

Typespecifier -> _type(void)_ void .
Typespecifier -> _type(int)_ int .

AA -> Fundeclaration.
AA -> Vardeclaration _var_.

Vardeclaration -> E1.

Fundeclaration -> _fun start_ ( Params ) _fun params end_ Compoundstmt _fun finished_.

E1 -> ;.
E1 -> [ num ] ;.

Compoundstmt -> { Declarationlist Statementlist } .

Statementlist -> .
Statementlist -> Statement Statementlist.

Statement -> Switchstmt.
Statement -> Returnstmt.
Statement -> Iterationstmt.
Statement -> Selectionstmt.
Statement -> Compoundstmt.
Statement -> Expressionstmt.

Expressionstmt -> ; .
Expressionstmt -> break _s break_ ;.
Expressionstmt -> continue _s continue_ ;.
Expressionstmt -> Expression ;.

Selectionstmt -> if ( Expression ) Statement else Statement .

Iterationstmt -> _while start_ while ( Expression ) Statement _while finished_ .

Returnstmt -> return E3.

E3 -> Expression ;.
E3 -> ;.

Switchstmt -> _switch start_ switch ( Expression ) { Casestmts Defaultstmt } _switch finished_ .

Casestmts -> Casestmt Casestmts.
Casestmts -> .

Casestmt -> case num : Statementlist .

Defaultstmt -> default : Statementlist.
Defaultstmt -> .

Expression -> _check id_ id _check id finished_ EXEXEX.
Expression -> NewSimpleexpression.

EXEXEX -> [ Expression ] EZEZEZ | = Expression | NewVarcall F3 F2 E5.

EZEZEZ -> = Expression | F3 F2 E5.

NewSimpleexpression -> NewAdditiveexpression E5.

E5 -> Relop Additiveexpression.
E5 -> .

Relop -> == .
Relop -> <.

Additiveexpression -> NewTerm F2 | _check id_ id Varcall F3 F2.

NewAdditiveexpression -> NewTerm F2.

F2 -> Addop Term F2.
F2 -> .

Addop -> +.
Addop -> -.

Term -> NewSignedfactor F3 | NewFactor F3 | _check id_ id Varcall F3.

NewTerm -> NewSignedfactor F3 | NewFactor F3.

F3 -> * Signedfactor F3.
F3 -> .

NewSignedfactor -> + Factor.
NewSignedfactor -> - Factor .

Signedfactor -> Factor.
Signedfactor -> + Factor.
Signedfactor -> - Factor .

F4 -> , _fun args increase_ Expression F4.
F4 -> .

NewFactor -> ( Expression ).
NewFactor -> num .

Factor -> ( Expression ).
Factor -> _check id_ id Varcall.
Factor -> num .

NewVarcall -> _check id finished_.
NewVarcall -> ( _fun args start_ Args _fun args finished_ ).

Varcall -> _check id finished_.
Varcall -> [ Expression ] _check id finished_.
Varcall -> ( _fun args start_ Args _fun args finished_ ).

Args -> Arglist.
Args ->  .

Arglist -> _fun args increase_ Expression F4.

Params -> _type(int)_ int _add id_ id _var_ Paramlist.
Params -> void BB.

BB -> _inline:'illegal..'_ id Paramlist.
BB -> .

Paramlist -> E2 F1.

F1 -> , Typespecifier _add id_ id _var_ E2 F1.
F1 -> .

E2 -> [].
E2 -> .
